version: 2.1

common: &common
  working_directory: ~/workspace
  parallelism: 1
  resource_class: small
  steps:
    - checkout
    - restore_cache:
        keys:
          - bundle-v1-{{ checksum "ruby_branch_coverage.gemspec" }}

    - run:
        name: Build gem dependencies
        command: |
          gem install bundler
          bundle lock
          bundle config --local path '.bundle'
          bundle check || bundle install --jobs 4
          bundle clean

    - save_cache:
        key: bundle-v1-{{ checksum "ruby_branch_coverage.gemspec" }}
        paths:
          - .bundle

    - run:
        name: Run tests
        command: |
          mkdir coverage
          bundle exec rspec
    - run:
        name: Run rubocop
        command: |
          bundle exec rubocop --debug --format json --out coverage/rubocop.json
          RESULT="$?"
          # check result of rsync db's
          if [ "$RESULT" != "1" ]; then
            echo -e "rsync exit Code:" $RESULT "\nFAILED to rsync backups"
            exit 0
          fi

jobs:
  test_3_2:
    docker:
      - image: cimg/ruby:3.2
    <<: *common
  sonarqube_analysis:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Check rubocop file existed
          command: |
            ls -la coverage/rubocop.json

      - run:
          name: Perform sonarqube analysis
          command: |
            # execute sonarqube scanner, send analysis result to the server \
            sonar-scanner \
              -Dsonar.host.url=${SONAR_HOST_URL} 
              -Dsonr.projectKey=ruby_branch_coverage \
              -Dsonar.sources=. \
              -Dsonar.exclusions=**/*_spec.rb
              -Dsonar.branch.name=${CIRCLE_BRANCH}; \

  upload_coveralls:
    working_directory: ~/workspace
    docker:
      - image: cimg/ruby:3.2
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run upload coveralls
          command: |
            curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$CIRCLE_BUILD_NUM&payload[status]=done"

workflows:
  version: 2
  build-and-test:
    jobs:
      - test_3_2
      - sonarqube_analysis:
          requires:
            - test_3_2
          filters:
            branches:
              only:
                - test_rubocop
      - upload_coveralls:
          requires:
            - test_3_2
